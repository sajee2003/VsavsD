// <auto-generated />
using System;
using EventBookingManagementSystem_Backend.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventBookingManagementSystem_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250424091625_VAZ")]
    partial class VAZ
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Asset", b =>
                {
                    b.Property<Guid>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssetStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Asset_Item", b =>
                {
                    b.Property<Guid>("AssetItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssetItemId");

                    b.HasIndex("AssetId");

                    b.HasIndex("ItemId");

                    b.ToTable("Asset_Item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Booking_Asset", b =>
                {
                    b.Property<Guid>("BookingAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookingAssetId");

                    b.HasIndex("AssetId");

                    b.ToTable("Booking_Asset");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Booking_Package_Item", b =>
                {
                    b.Property<Guid>("BookingPackageItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookingPackageItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("Booking_Package_Item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("item_CategoryItemCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId");

                    b.HasIndex("item_CategoryItemCategoryId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item_Category", b =>
                {
                    b.Property<Guid>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemCategoryId");

                    b.ToTable("Item_Categories");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item_Price", b =>
                {
                    b.Property<Guid>("ItemPriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("base_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemPriceID");

                    b.HasIndex("AssetId");

                    b.HasIndex("ItemId");

                    b.ToTable("Item_Price");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Package", b =>
                {
                    b.Property<Guid>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PackageId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Package_Item", b =>
                {
                    b.Property<Guid>("PackageItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("item")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PackageItemId");

                    b.HasIndex("AssetId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackageId");

                    b.ToTable("Package_Item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Asset_Item", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Asset", "asset")
                        .WithMany("Asset_Items")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Item", "item")
                        .WithMany("Asset_Items")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("asset");

                    b.Navigation("item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Booking_Asset", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Asset", null)
                        .WithMany("Booking_Assets")
                        .HasForeignKey("AssetId");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Booking_Package_Item", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Item", null)
                        .WithMany("Booking_Package_Items")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Item_Category", "item_Category")
                        .WithMany("Items")
                        .HasForeignKey("item_CategoryItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item_Category");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item_Price", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Asset", "asset")
                        .WithMany("Item_Prices")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Item", "item")
                        .WithMany("Item_Prices")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("asset");

                    b.Navigation("item");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Package_Item", b =>
                {
                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Asset", "asset")
                        .WithMany("Package_Items")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Item", null)
                        .WithMany("Package_Items")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventBookingManagementSystem_Backend.DB.Entities.Package", "package")
                        .WithMany("Package_Items")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("asset");

                    b.Navigation("package");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Asset", b =>
                {
                    b.Navigation("Asset_Items");

                    b.Navigation("Booking_Assets");

                    b.Navigation("Item_Prices");

                    b.Navigation("Package_Items");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item", b =>
                {
                    b.Navigation("Asset_Items");

                    b.Navigation("Booking_Package_Items");

                    b.Navigation("Item_Prices");

                    b.Navigation("Package_Items");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Item_Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EventBookingManagementSystem_Backend.DB.Entities.Package", b =>
                {
                    b.Navigation("Package_Items");
                });
#pragma warning restore 612, 618
        }
    }
}
